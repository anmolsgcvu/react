{"version":3,"sources":["commponents/Navbar.js","commponents/Textform.js","commponents/Aout.js","commponents/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","data-bs-toggle","href","role","aria-expanded","title","onClick","too","type","id","htmlFor","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","haeding","onChange","event","console","log","target","value","rows","er","toUpperCase","toLowerCase","split","length","Aout","color","backgroundColor","my","setMyStyle","_useState3","_useState4","setBtnText","style","data-bs-target","aria-controls","aria-labelledby","data-bs-parent","border","Alert","alert","w","l","charAt","slice","c","ty","ms","data-bs-dismiss","aria-label","App","setMode","setAlert","showAlert","a","document","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.814367fb.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navar avar-expand-lg navbar-${props.mode}) bg-${props.mode}` }>\r\n    \r\n\r\n    <ul className=\"nav nav-tabs\">\r\n  <li className=\"nav-item\">\r\n    {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/aout\">aout</a> */}\r\n  </li>\r\n  <li className=\"nav-item dropdown\">\r\n    <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">Dropdown</a>\r\n    <ul className=\"dropdown-menu\">\r\n      <li><a className=\"dropdown-item\" href=\"#\">Action{props.title}</a></li>\r\n      <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n      <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n      <li><hr className=\"dropdown-divider\"/></li>\r\n      <li><a className=\"dropdown-item\" href=\"#\">Separated link</a></li>\r\n    </ul> \r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <a className=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <a className=\"nav-link disabled\"  href=\"#\">Disabled</a>\r\n  </li>\r\n</ul>\r\n<div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.too} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Default switch checkbox input</label>\r\n</div>\r\n</nav>\r\n\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\nfunction Textform(props) { \r\n    const he =()=>{\r\n       // console.log(\"upper1\"+text);\r\n        let er= text.toUpperCase();\r\n        setText(er);\r\n    }\r\n    const hea =()=>{\r\n      //console.log(\"lower1\"+text);\r\n       let er= text.toLowerCase();\r\n       setText(er);\r\n    }\r\n    const hee =(event)=>{\r\n        console.log(\"upfgper1\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText]=useState('eter');\r\n    // setText(\"dfgh\");\r\n  return (<>\r\n    <div className='cotainer'>\r\n        <h1>{props.haeding} </h1>\r\n        \r\n  <div className=\"mb-3\">\r\n    \r\n    <textarea className=\"form-control\" onChange={hee}  value={text} id=\"exa\" rows=\"3\"></textarea>\r\n\r\n  </div>\r\n  <button className='bt mx-2' onClick={he} >uppercase</button>\r\n  <button className='bt mx-3' onClick={hea} >lowercase</button>\r\n      \r\n    </div>\r\n    <div className='cotainer my-3'>\r\n      <h1>ahjkkh</h1>\r\n      <p>{text.split(\" \").length}dfgh,{text.length} dcfvghj</p>\r\n      <p>{0.008 * text.split(\" \").length}length</p>\r\n      <h2>privew</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Textform\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Aout() {\r\nconst [my,setMyStyle]= useState({\r\n    color :'red',\r\n    backgroundColor: 'blue',\r\n   \r\n})\r\nconst [btnext,setBtnText] = useState(\"enter\")\r\nconst agss = ()=> {\r\n    if(my.color === 'white'){\r\n        setMyStyle({\r\n            color:'black',\r\n            backgroundColor:'white'\r\n           \r\n        })\r\n        setBtnText(\"enter\")\r\n    }\r\n    else{\r\n        setMyStyle({\r\n            color:'white',\r\n            backgroundColor:'black',\r\n            border:'2px solid red'\r\n        })\r\n        setBtnText(\"enfghsd\")\r\n\r\n    }\r\n}\r\n     \r\n  return (\r\n    <div className='container' style={my}>\r\n        <h1 className='my-2'>about </h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            Accordion Item #1\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Accordion Item #2\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            Accordion Item #3\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div className='container my-3'>\r\n    <button type=\"button\" onClick={agss} className=\"btn btn-info\">dark</button>\r\n        </div>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const c = (w)=>{\r\n        const l=w.toLowerCase();\r\n        return l.charAt(0).toUpperCase() + l.slice(1);\r\n    }\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-warning alert-dismissible fade show`} role=\"alert\">\r\n   <strong>{c(props.alert.ty)}</strong>: {props.alert.ms}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './commponents/Navbar';\nimport Textform from './commponents/Textform';\nimport Aout from './commponents/Aout';\nimport React,{ useState } from 'react';\nimport Alert from './commponents/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  \n  const too=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"asdfghj\",\"success\");\n      document.title = \"textutils - dark\";\n      setInterval(() => {\n        document.title = \"textutils - dark mode\";\n      },2000);\n      setInterval(() => {\n        document.title = \" istall textutils - dark mode\";\n      },1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"dxcfgvhj\",\"success\");\n      document.title = \"textutils - light\";\n    }\n  }\n  const [alert,setAlert]=useState(null);\n  const showAlert = (a,type)=>{\n    setAlert({\n      ms:a,\n      ty:type\n    })\n    // setTimeout(() =>{\n    //   setAlert(null)\n    // },3000)\n  }\n  return (\n    <>\n    {/* <Navbar title='fvg' />\n<div className=\"container my-3\">\n\n\n    <Textform haeding=\"asdfg\"/>\n    </div>\n    </> */}\n    \n<Navbar title='fvg' mode={mode} too={too} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n\n          <Aout />\n         \n         \n          <Textform haeding=\"asdfg\"/>\n            \n         \n\n\n\n    \n        </div>\n    \n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}